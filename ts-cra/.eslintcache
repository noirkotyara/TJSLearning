[{"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx":"1","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts":"2","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx":"3","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Navbar.tsx":"4","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\pages\\Home.tsx":"5","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\pages\\About.tsx":"6","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Form.tsx":"7","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\AlertState.js":"8","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\alertContext.js":"9","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\alertReducer.js":"10","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\types.js":"11","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Alert.jsx":"12","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Notes.tsx":"13","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\FirebaseState.js":"14","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\firebaseContext.js":"15","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\firebaseReducer.js":"16","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Preloader.jsx":"17","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Notes copy.jsx":"18"},{"size":549,"mtime":1614273218323,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":947,"mtime":1614287658828,"results":"22","hashOfConfig":"20"},{"size":585,"mtime":1614265286633,"results":"23","hashOfConfig":"20"},{"size":331,"mtime":1614280200397,"results":"24","hashOfConfig":"20"},{"size":458,"mtime":1614265323990,"results":"25","hashOfConfig":"20"},{"size":1236,"mtime":1614330008528,"results":"26","hashOfConfig":"20"},{"size":770,"mtime":1614273706607,"results":"27","hashOfConfig":"20"},{"size":78,"mtime":1614272186701,"results":"28","hashOfConfig":"20"},{"size":299,"mtime":1614326882714,"results":"29","hashOfConfig":"20"},{"size":203,"mtime":1614286103951,"results":"30","hashOfConfig":"20"},{"size":725,"mtime":1614337328960,"results":"31","hashOfConfig":"20"},{"size":2295,"mtime":1614344103449,"results":"32","hashOfConfig":"20"},{"size":2414,"mtime":1614340254498,"results":"33","hashOfConfig":"20"},{"size":81,"mtime":1614285522437,"results":"34","hashOfConfig":"20"},{"size":863,"mtime":1614332010352,"results":"35","hashOfConfig":"20"},{"size":219,"mtime":1614327375159,"results":"36","hashOfConfig":"20"},{"size":1409,"mtime":1614343965787,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1tbwlw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx",[],["81","82"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx",["83","84","85","86"],"import React, { useContext, useEffect } from 'react';\r\nimport './App.scss';\r\nimport NavbarComp from './components/Navbar';\r\nimport { Route } from 'react-router-dom'\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport { AlertState } from './context/alert/AlertState';\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\nimport { FirebaseState } from './context/firebase/FirebaseState';\r\nimport { FirebaseContext } from './context/firebase/firebaseContext';\r\nconst _ = require('lodash');\r\n\r\nlet App = () => {\r\n  \r\n  return (<div className='container'>\r\n    <FirebaseState>\r\n      <AlertState>\r\n        <NavbarComp />\r\n        <div className='content'>\r\n          <Switch>\r\n            <Route path={'/about'} component={() => <About />} />\r\n            <Route exact path={'/'} component={() => <Home />} />\r\n          </Switch>\r\n        </div>\r\n      </AlertState>\r\n    </FirebaseState>\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Navbar.tsx",["87"],"import React, { useState } from 'react'\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\nconst NavbarComp = () => {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">NAVBAR</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n          <Nav className=\"mr-auto \">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>   \r\n    )\r\n}\r\n\r\nexport default NavbarComp","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\pages\\Home.tsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\pages\\About.tsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Form.tsx",["88","89"],"import React, { useContext, useReducer, useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\nconst FormComp = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const { showAlert, alert } = useContext(AlertContext)\r\n    const { addNote } = useContext(FirebaseContext)\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n        try{\r\n        if (value.trim()) {\r\n            addNote(value)\r\n            showAlert(`Your note-->${value} is successfully created`, 'success')\r\n            setValue('')\r\n        } else {\r\n            throw new Error ('Write your note`s title')\r\n        }\r\n\r\n        } catch(e){\r\n            showAlert(e.message, 'danger')\r\n        }\r\n         \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"write here ...\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.currentTarget.value)} />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormComp","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\AlertState.js",[],["90","91"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\alertContext.js",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\alert\\alertReducer.js",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\types.js",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Alert.jsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Notes.tsx",["92","93"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\FirebaseState.js",["94"],"import axios from 'axios'\r\nimport { config } from 'process'\r\nimport React, { useReducer } from 'react'\r\nimport { ADD_NOTE, FETCH_NOTES, ISLOADING, REMOVE_NOTE } from '../types'\r\nimport { FirebaseContext } from \"./firebaseContext\"\r\nimport { firebaseReducer } from './firebaseReducer'\r\n\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n    const [state, dispatch] = useReducer(firebaseReducer, {\r\n        isLoading: false,\r\n        notes: []\r\n    })\r\n\r\n    const getNotes = async () => {\r\n        try {\r\n            dispatch({ type: ISLOADING, payload: { isLoading: true } })\r\n            //get data from firebase\r\n            const result = await axios.get(`${url}/notes.json`)\r\n            //set data to the \"redux-state\" with hooks\r\n            const notes = Object\r\n                .keys(result.data)\r\n                .map(_key => ({\r\n                    ...result.data[_key],\r\n                    id: _key\r\n                }))\r\n                .reverse()\r\n            dispatch({ type: FETCH_NOTES, payload: { notes } })\r\n            console.log(state.notes)\r\n            dispatch({ type: ISLOADING, payload: { isLoading: false } })\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addNote = async (text) => {\r\n        try {\r\n           \r\n            const result = await axios.post(`${url}/notes.json`, {\r\n                text, date: new Date().toJSON()\r\n            })\r\n            const noteData = JSON.parse(result.config.data)\r\n            dispatch({\r\n                type: ADD_NOTE, payload: {\r\n                    note: {\r\n                        ...noteData,\r\n                        id: result.data.name\r\n                    }\r\n                }\r\n            })\r\n            console.log(result)\r\n           \r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    const deleteNote = async (id) => {\r\n            try{\r\n                const result = await axios.delete(`${url}/notes/${id}.json`)\r\n                console.log(result)\r\n                dispatch({type: REMOVE_NOTE, payload: {id} })\r\n            } catch(e) {\r\n                     \r\n            }\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            isLoading: state.isLoading,\r\n            notes: state.notes,\r\n            getNotes,\r\n            addNote,\r\n            deleteNote\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\firebaseContext.js",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\context\\firebase\\firebaseReducer.js",["95"],"import React from 'react'\r\n\r\nimport { ADD_NOTE, FETCH_NOTES, ISLOADING, REMOVE_NOTE } from \"../types\"\r\n\r\nconst handlers = {\r\n    [ISLOADING]: (state, {payload}) => ({\r\n        ...state, \r\n        isLoading: payload.isLoading\r\n    }),\r\n    [FETCH_NOTES]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: payload.notes\r\n    }),\r\n    [ADD_NOTE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: [payload.note, ...state.notes ]\r\n    }),\r\n    [REMOVE_NOTE]: (state, {payload}) => {\r\n        const filteredArray = state.notes.filter(\r\n            note => payload.id !== note.id \r\n        )\r\n        return {\r\n        ...state,\r\n        notes: filteredArray\r\n    }},\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const func = handlers[action.type] || handlers.DEFAULT\r\n    return func(state, action)\r\n}","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Preloader.jsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\Notes copy.jsx",["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":1,"column":29,"nodeType":"104","messageId":"105","endLine":1,"endColumn":38},{"ruleId":"102","severity":1,"message":"107","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":11,"column":7,"nodeType":"104","messageId":"105","endLine":11,"endColumn":8},{"ruleId":"102","severity":1,"message":"109","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"110","line":1,"column":29,"nodeType":"104","messageId":"105","endLine":1,"endColumn":39},{"ruleId":"102","severity":1,"message":"111","line":7,"column":24,"nodeType":"104","messageId":"105","endLine":7,"endColumn":29},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"111","line":15,"column":24,"nodeType":"104","messageId":"105","endLine":15,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":24,"column":8,"nodeType":"114","endLine":24,"endColumn":10,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"118","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"119","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":4,"column":3,"nodeType":"104","messageId":"105","endLine":4,"endColumn":12},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FirebaseContext' is defined but never used.","'_' is assigned a value but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'alert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-unused-vars","'config' is defined but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [getNotes]",{"range":"126","text":"127"},[779,781],"[getNotes]"]