[{"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx":"1","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts":"2","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx":"3","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\hoc.tsx":"4","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\JsLearning.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1895,"mtime":1612804088366,"results":"9","hashOfConfig":"7"},{"size":914,"mtime":1610366609384,"results":"10","hashOfConfig":"7"},{"size":2607,"mtime":1612968575989,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tbwlw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx",[],["24","25"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx",["26","27"],"import React from 'react';\nimport './App.css';\nimport {  Field, Form, Formik, FormikHelpers } from 'formik';\nimport { Func } from './components/hoc';\nimport { JsLearning } from './components/JsLearning';\nconst _ = require('lodash');\n\ntype ErrorsType = {\n  email?: string\n}\n\ntype FormType = {\n  term: string\n  friend: 'null' | 'true' | 'false'\n}\n\nlet App = () => {\n\n\n\n  const onSubmit = (values: FormType, { setSubmitting }: FormikHelpers<FormType>) => {\n    debugger\n    const valuesConverted = {...values, \n    friend: values.friend === 'null' \n    ? null \n    : values.friend === 'true' \n    ? true \n    : values.friend === 'false' \n    && false}   \n    console.log(valuesConverted)\n    setSubmitting(false);\n  }\n  const validate = (values: ErrorsType) => {\n    const errors: ErrorsType = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n    return errors;\n  }\n\n  return (<div>\n\n    <div>\n      <JsLearning/>\n    </div>\n    <div> <Func title='function' name='cat'  /> </div>\n    This is an example Formik\n    <div>\n      <Formik\n        initialValues={{ term: '', friend: 'null' }}\n        // validate={validate}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"term\" />\n            {/* <ErrorMessage name=\"email\" component=\"div\" /> */}\n            <Field name=\"friend\" as=\"select\">\n              <option value=\"null\">All</option>\n              <option value=\"true\">Only followed</option>\n              <option value=\"false\">Only unfollowed</option>\n            </Field>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n           </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  </div>)\n}\n\nexport default App;\n","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\hoc.tsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\JsLearning.jsx",["28","29","30","31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":7,"nodeType":"39","messageId":"40","endLine":6,"endColumn":8},{"ruleId":"37","severity":1,"message":"41","line":33,"column":9,"nodeType":"39","messageId":"40","endLine":33,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"44","line":1,"column":27,"nodeType":"39","messageId":"40","endLine":1,"endColumn":45},{"ruleId":"45","severity":1,"message":"46","line":5,"column":1,"nodeType":"47","messageId":"48","endLine":10,"endColumn":2},{"ruleId":"42","severity":1,"message":"49","line":11,"column":5,"nodeType":"39","messageId":"40","endLine":11,"endColumn":10},{"ruleId":"42","severity":1,"message":"50","line":102,"column":7,"nodeType":"39","messageId":"40","endLine":102,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'validate' is assigned a value but never used.","no-unused-vars","'applyMiddleware' is defined but never used.","'bindActionCreators' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'board' is assigned a value but never used.","'person2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]