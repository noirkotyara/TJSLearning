[{"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx":"1","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts":"2","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx":"3","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\hoc.tsx":"4","E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\JsLearning.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1972,"mtime":1614249028532,"results":"9","hashOfConfig":"7"},{"size":914,"mtime":1610366609384,"results":"10","hashOfConfig":"7"},{"size":3837,"mtime":1613403049717,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tbwlw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\index.tsx",[],["25","26"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\reportWebVitals.ts",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\App.tsx",["27","28"],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\hoc.tsx",[],"E:\\WebP\\react\\TSlearning\\ts-cra\\src\\components\\JsLearning.jsx",["29","30","31","32","33"],"import { allowedNodeEnvironmentFlags } from \"process\"\r\nimport { applyMiddleware, bindActionCreators } from \"redux\"\r\n\r\nlet array3 = [1, 2, 3, 4, 5]\r\n\r\nArray.prototype.multBy = function (n) {\r\n    return this.map((elem) => {\r\n        return elem * n\r\n    })\r\n    // console.log(this)\r\n}\r\nlet board = {}\r\n// console.log(board)\r\nexport const JsLearning = () => {\r\n    return (\r\n        <div>\r\n            This is here -- {array3.multBy(4)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//to do bind function\r\n// function logPerson() {\r\n//         console.log(this)\r\n//     console.log(`Person: ${this.name}, ${this.age}, ${this.job}` )\r\n// }\r\n\r\n\r\n// const person1 = {name: 'Lena', age: 22, job: 'front'}\r\n// const person2 = {name: 'Dianna', age: 18, job: 'back'}\r\n\r\n// function bind(context, fn){\r\n//     return function log(...args){\r\n//         fn.apply(context, args)\r\n//     }\r\n// }\r\n\r\n// bind(person1, logPerson)()\r\n// bind(person2, logPerson)()\r\n\r\n\r\n\r\n// Написать класс Dog, который наследуется от класcа Animal. \r\n// Класс Animal имеет метод getName (name можно передать в конструктор). \r\n// Класс Dog имеет метод bark (возвращает строку «Dog {dogname} is barking».\r\n\r\n\r\n// class Animal {\r\n//     constructor(name){\r\n//         this.name = name\r\n//     }\r\n//     getName(){\r\n//         return this.name\r\n//     }\r\n// }\r\n\r\n// class Dog extends Animal {\r\n//     constructor(name){\r\n//         super(name)\r\n//         this.dogname = name\r\n//     }\r\n//     bark(){\r\n//         return `Dog ${this.dogname} is barking`\r\n//     }\r\n// }\r\n\r\n// let object = new Dog('jess')\r\n// console.log(object.getName())\r\n\r\n\r\n//with prototype\r\n// let animal = function(name){\r\n//     this.name = name\r\n// }\r\n// animal.prototype.getName = function(){\r\n//     return this.name\r\n// }\r\n\r\n\r\n// let dog = function (name) {\r\n//     animal.apply(this, [name])\r\n// }\r\n\r\n// dog.prototype = Object.create(animal.prototype)\r\n\r\n// dog.prototype.bark = function(){\r\n//     return `Dog ${this.name} is barking`\r\n// }\r\n\r\n// let jessDog = new dog('Jess')\r\n//     console.log(dog.prototype)\r\n\r\n\r\n///bind\r\n\r\n// let person = function () {\r\n//     console.log(this)\r\n//     console.log(`it is ${this.name} ${this.id} ${this.age} ${this.hello}`)\r\n// }\r\n\r\n// const person1 = { id: 1, name: 'lena', age: 22, hello: 'fgfgf' }\r\n// const person2 = { id: 2, name: 'Ivan', age: 18 }\r\n\r\n// function bind(fn, obj) {\r\n//     return () => {\r\n//         console.log(arguments)\r\n//         fn.apply(obj, arguments)\r\n//     }\r\n// }\r\n\r\n// let func1 = bind(person, person1)\r\n// bind(person, person1)()\r\n// console.log(bind.arguments())\r\n// bind(person ,person2)()\r\n\r\n//13.02.2021\r\n\r\n// let dog = {\r\n//     breed: 'Beagles',\r\n//     lovesToChase: 'rabbits'\r\n// }\r\n\r\n// function chase() {\r\n//     console.log(this.breed + ' loves chasing ' + this.lovesToChase )\r\n// }\r\n\r\n// dog.foo = chase\r\n// dog.foo()\r\n// chase() //error\r\n\r\n// function Yo(name) {\r\n//     this.name = name\r\n//     return this;\r\n// }\r\n\r\n// Yo.prototype.hello = function () {\r\n//     alert(this.name)\r\n// }\r\n\r\n// var yo1 = new Yo('dima')\r\n// yo1.__proto__\r\n// var yo2 = new Yo('dianna')\r\n// yo2.hello()\r\n\r\n//самовызывающайся функция\r\n\r\n// var func = (function(){\r\n//     // переменные не выходят отсюда\r\n//     var city = 'Minsk'\r\n//     var a = 3 // записівается в lexical environment\r\n//     return function(){\r\n//         alert(a)\r\n//     }\r\n// })()\r\n\r\n\r\n// var a = {\r\n//     name: 'Dima',\r\n//     sayName: function () {\r\n//         alert(this.name)\r\n//     }\r\n// }\r\n\r\n// var b = {\r\n//     name: 'Sveta'\r\n// }\r\n\r\n// b.sayName = a.sayName\r\n// b.sayName() // Dima\r\n\r\n// var c = a.sayName.bind(a)\r\n// c()//Dima\r\n\r\n// window.setTimeout(a.sayName, 1000) //this --> window\r\n\r\n",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":7,"nodeType":"42","messageId":"43","endLine":6,"endColumn":8},{"ruleId":"40","severity":1,"message":"44","line":33,"column":9,"nodeType":"42","messageId":"43","endLine":33,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":37},{"ruleId":"45","severity":1,"message":"47","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":25},{"ruleId":"45","severity":1,"message":"48","line":2,"column":27,"nodeType":"42","messageId":"43","endLine":2,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":6,"column":1,"nodeType":"51","messageId":"52","endLine":11,"endColumn":2},{"ruleId":"45","severity":1,"message":"53","line":12,"column":5,"nodeType":"42","messageId":"43","endLine":12,"endColumn":10},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'validate' is assigned a value but never used.","no-unused-vars","'allowedNodeEnvironmentFlags' is defined but never used.","'applyMiddleware' is defined but never used.","'bindActionCreators' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'board' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]